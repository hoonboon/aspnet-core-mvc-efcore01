@using MyApp.Admin.Security.Public.Dtos

@model MyApp.Admin.Security.Public.Dtos.RoleDetailDto

@{
    ViewData["Title"] = "Details";
}

<h1>Edit</h1>

<h4>Role</h4>
<hr />
<dl class="row">
    <dt class="col-md-2 col-4">
        @Html.DisplayNameFor(model => model.Name)
    </dt>
    <dd class="col-md-10 col-8">
        @Html.DisplayFor(model => model.Name)
    </dd>
    <dt class="col-md-2 col-4">
        @Html.DisplayNameFor(model => model.RoleDescription)
    </dt>
    <dd class="col-md-10 col-8">
        @Html.DisplayFor(model => model.RoleDescription)
    </dd>
    <dt class="col-md-2 col-4">
        @Html.DisplayNameFor(model => model.PermissionsInput)
    </dt>
    <dd class="col-md-10 col-12">
        <table class="table table-sm table-striped">
            <thead>
                <tr>
                    <th class="text-center">Modules</th>
                    <th class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @{
                    AllPermissionOptionsDto optionsDto = Model.PermissionOptions;
                    IEnumerable<string> groupNameList = optionsDto.GroupNameList;
                    IDictionary<string, List<PermissionOptionItemDto>> optionsDictionary = optionsDto.OptionsByGroupName;
                    List<PermissionOptionItemDto> tempOptions = null;

                    foreach (var groupName in groupNameList)
                    {
                        if (optionsDictionary.TryGetValue(groupName, out tempOptions))
                        {
                            <tr>
                                <td>
                                    @groupName
                                </td>
                                <td>
                                    <div class="row">
                                        @{
                                            foreach (var option in tempOptions)
                                            {
                                                <div class="form-check m-1 mr-2 ml-2">
                                                    <input type="checkbox"
                                                           disabled
                                                           class="form-check-input"
                                                           name="PermissionsInput"
                                                           value="@option.Value"
                                                           @(Html.Raw(option.IsSelected ? "checked=\"checked\"" : "")) />
                                                    <label class="form-check-label">
                                                        @option.Label
                                                    </label>
                                                </div>
                                            }
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                }
            </tbody>
        </table>
    </dd>
</dl>

<div>
    <a asp-action="Edit" asp-route-id="@Model.RoleId">Edit</a> |
    @if (!Model.IsBuiltInRole)
    {
    <a asp-action="Delete" asp-route-id="@Model.RoleId">Delete</a> @:|
    }
    <a asp-action="Index">Back to List</a>
</div>

