@using MyApp.School.Public.Dtos
@using MyApp.Common.Public.Dtos

@model MyApp.School.Public.Dtos.StudentListDto

@{
    ViewData["Title"] = "Students";
    ViewData["ScriptNameList"] = new string[] { 
        "~/js/common/data-table.js",
        "~/js/school/students-index.js"
    };
}

<h1>Students</h1>

<form asp-action="Index" method="get" id="DataTableForm">
    <input type="hidden" asp-for="FilterSortPageValues.PreviousStateValue" id="PreviousStateValue" name="PreviousStateValue" />
    <input type="hidden" asp-for="FilterSortPageValues.PageIndex" id="PageIndex" name="PageIndex" />
    <input type="hidden" asp-for="FilterSortPageValues.SortBy" id="SortBy" name="SortBy" />
    <input type="hidden" asp-for="FilterSortPageValues.SortAscending" id="SortAscending" name="SortAscending" />
    <div class="form-row">
        @if (User.HasPermission(Permissions.StudentAdd))
        {
            <div class="col-auto">
                <a class="btn btn-primary mb-1" asp-action="Create">Create New</a>
            </div>
        }
        <div class="col-auto">
            <select asp-for="FilterSortPageValues.FilterBy" id="FilterBy" name="FilterBy"
                    asp-items="Html.GetEnumSelectList<StudentsFilterOptions>()"
                    class="form-control mb-1"></select>
        </div>
        <div class="col-auto">
            <input value="@Model.FilterSortPageValues.FilterValue" id="FilterValue" name="FilterValue"
                   type="@( (Model.FilterSortPageValues.FilterBy == (int)StudentsFilterOptions.EnrollmentDateAfter || Model.FilterSortPageValues.FilterBy == (int)StudentsFilterOptions.EnrollmentDateBefore) ? "date" : "text")"
                   @(Model.FilterSortPageValues.FilterBy == (int)StudentsFilterOptions.NoFilter ? "readonly" : "")
                   class="form-control mb-1">
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-primary mb-1" id="BtnSubmitSearch">
                Search
            </button>
        </div>
        <div class="col-auto">
            <a asp-action="Index" class="btn btn-primary mb-1">Reset</a>
        </div>
    </div>

    <div>
        <table class="table table-sm table-striped">
            <thead>
                <tr>
                    <th>
                        <a class="sortable" id="SortField1">
                            Last Name
                        </a>
                    </th>
                    <th>
                        <a class="sortable" id="SortField2">
                            First Name
                        </a>
                    </th>
                    <th>
                        <a class="sortable" id="SortField3">
                            Enrollment Date
                        </a>
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Listing != null && Model.Listing.Any())
                {
                    @foreach (var item in Model.Listing)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.LastName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FirstMidName)
                            </td>
                            <td class="text-nowrap">
                                @Html.DisplayFor(modelItem => item.EnrollmentDate)
                            </td>
                            <td class="text-nowrap">
                                <a asp-action="Details" class="btn btn-outline-secondary btn-sm" asp-route-id="@item.StudentId">Details</a>
                                @if (User.HasPermission(Permissions.StudentEdit))
                                {
                                    <a asp-action="Edit" class="btn btn-outline-secondary btn-sm" asp-route-id="@item.StudentId">Edit</a>
                                }
                                @if (User.HasPermission(Permissions.StudentDelete))
                                {
                                    <a asp-action="Delete" class="btn btn-outline-secondary btn-sm" asp-route-id="@item.StudentId">Delete</a>
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4" class="text-center font-weight-bold text-danger">
                            @Constants.NO_RECORD
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <partial name="_PaginationPartial" model="Model.Listing.PaginationInfo" />
    
</form>

@section Scripts 
{
    <script>
        @* set server side values for use in subsequent js files *@
        var sortFields = {
            SortField1: @((int)StudentsSortByOptions.LastName),
            SortField2: @((int)StudentsSortByOptions.FirstMidName),
            SortField3: @((int)StudentsSortByOptions.EnrollmentDate)
        };

        var prevPageNo = @(Model.Listing.PaginationInfo.TotalPages - 1);
        var nextPageNo = @(Model.Listing.PaginationInfo.TotalPages + 1);
    </script>

}